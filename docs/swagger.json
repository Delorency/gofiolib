{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/person": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить список пользователей",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество записей на одной странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/swagger.SwaggerPerson"
                            }
                        }
                    },
                    "400": {
                        "description": "page должно быть числом \u003e 0",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerNewError"
                        }
                    },
                    "500": {
                        "description": "Ошибка получения данных",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerNewError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создать пользователя",
                "parameters": [
                    {
                        "description": "Создать пользователя",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/personhandler.requestCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerPerson"
                        }
                    },
                    "400": {
                        "description": "Ошибка создания пользователя",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerValidateData"
                        }
                    },
                    "500": {
                        "description": "Ошибка создания пользователя",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerNewError"
                        }
                    }
                }
            }
        },
        "/person/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Получить пользователя по id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerPerson"
                        }
                    },
                    "400": {
                        "description": "Идентификатор должен быть числом",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerNewError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerNewError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Изменить данные пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Изменить данные пользователя",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/personhandler.requestUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerPerson"
                        }
                    },
                    "400": {
                        "description": "Идентификатор должен быть числом",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerValidateData"
                        }
                    },
                    "404": {
                        "description": "Объект не найден",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerValidateData"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerNewError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удалить пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Успешно удалено"
                    },
                    "400": {
                        "description": "Идентификатор должен быть числом",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerValidateData"
                        }
                    },
                    "404": {
                        "description": "Объект не найден",
                        "schema": {
                            "$ref": "#/definitions/swagger.SwaggerValidateData"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "personhandler.requestCreate": {
            "type": "object",
            "required": [
                "name",
                "patronymic",
                "surname"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "personhandler.requestUpdate": {
            "type": "object",
            "required": [
                "age",
                "gender",
                "name",
                "nat",
                "patronymic",
                "surname"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nat": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "swagger.SwaggerNewError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "swagger.SwaggerPerson": {
            "type": "object",
            "properties": {
                "Age": {
                    "type": "integer"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "DeletedAt": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Nat": {
                    "type": "string"
                },
                "Patronymic": {
                    "type": "string"
                },
                "Surname": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                }
            }
        },
        "swagger.SwaggerValidateData": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}